{"version":3,"sources":["axios.js","Row.js","request.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseurl","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","console","log","fetchData","className","map","movie","onClick","movieTrailer","name","original_title","then","url","split","undefined","catch","error","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","setMovie","request1","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","Nav","srcSet","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78b66bef.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// base url to make request to movie database after this whenever i use get the it will be added to this url.\r\n\r\nconst instance = axios.create({\r\n    baseurl:\"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport axios from './axios';\r\nimport \"./Row.css\";\r\nimport movieTrailer from 'movie-trailer';\r\n// import ReactPlayer from 'react-player';\r\nimport YouTube from 'react-youtube';\r\n\r\nconst baseurl=\"https://image.tmdb.org/t/p/original/\"\r\n\r\nfunction Row ({title,fetchUrl,isLargeRow}){\r\n    const[movies,setMovies]=useState([]);\r\n    const[trailerUrl,setTrailerUrl]=  useState(\"\");\r\n\r\n    useEffect(() => {\r\n       async function fetchData(){\r\n           const request = await axios.get(fetchUrl);\r\n           setMovies(request.data.results);\r\n           console.log(request.data.results);\r\n           return request;\r\n       }\r\n       fetchData();\r\n    }, [fetchUrl]);\r\n\r\n\r\n    const opts = {\r\n        height: \"390\",\r\n        width: \"100%\",\r\n        playerVars:{\r\n            // https://developers.google.com/youtube/player_parameters\r\n            autoplay:1,\r\n        },\r\n    };\r\n\r\n    const handleClick= (movie)=>{\r\n        if (trailerUrl){\r\n            setTrailerUrl('');\r\n        }else{\r\n            movieTrailer(movie?.name || movie?.original_title  || movie?.title)\r\n            .then((url)=>{\r\n                // const urlParams = new URLSearchParams(new URL(url).search);\r\n                url = url.split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/);\r\n                setTrailerUrl((url[2] !== undefined) ? url[2].split(/[^0-9a-z_\\-]/i)[0] : url[0]);\r\n                // setTrailerUrl(urlParams.get(\"v\"));\r\n\r\n            }).catch((error)=>console.log(error))\r\n            console.log(movie);\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n            <div className=\"row_posters\">\r\n                {movies.map((movie) =>{\r\n                    return(<img key={movie.id}  onClick={()=>handleClick(movie)} className={`row_poster ${isLargeRow && \"row_posterLarge\"}`} src={`${baseurl}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name} />\r\n                    )\r\n                    \r\n                })}\r\n            </div>\r\n           {trailerUrl && <YouTube videoId={trailerUrl} opts={opts}/>}\r\n            \r\n            {/* <ReactPlayer url='https://youtu.be/DNKdP_k6QOs'/> */}\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Row\r\n\r\n\r\n\r\n// onClick={()=>handleClick(movie)}\r\n","const API_KEY = \"139aedfcebcc3705a17a2533e7ccc5b3\";\r\n\r\nconst request={\r\n    fetchTrending:`https://api.themoviedb.org/3/trending/all/Week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals:`https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&with_network=213`,\r\n    fetchTopRated:`https://api.themoviedb.org/3/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies:`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies:`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies:`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies:`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries:`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n}\r\n\r\nexport default request;","import React from 'react';\r\nimport { useEffect,useState } from 'react';\r\nimport axios from './axios';\r\nimport request from './request.js';\r\nimport \"./Banner.css\"\r\n\r\n\r\n\r\nfunction Banner( ){\r\n    const[movie,setMovie] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        async function fetchData(){\r\n            const request1 = await axios.get(request.fetchNetflixOriginals);\r\n\r\n            setMovie(\r\n            request1.data.results[Math.floor(Math.random() * request1.data.results.length-1)]\r\n            );\r\n            return request1;\r\n        }\r\n        fetchData();\r\n\r\n    },[]);\r\n    console.log(movie)\r\n\r\n    // function truncate(str, max) {\r\n    //     return str?.length > max ? str.substr(0, max-1) + 'â€¦' : str;\r\n    //   }\r\n\r\n    return (\r\n        <header className=\"banner\" style={{backgroundSize:\"cover\",backgroundImage:`url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,backgroundPosition:\"center center\",}}>\r\n            <div className=\"banner_contents\">\r\n                <h1 className=\"banner_title\">{movie?.title || movie?.name || movie?.original_name}</h1>\r\n                <div className=\"banner_buttons\">\r\n                    <button className=\"banner_button\">play</button>\r\n                    <button className=\"banner_button\">My List</button>\r\n                </div>\r\n                <h1 className=\"banner_description\">{movie?.overview}</h1>\r\n                {/* {truncate(movie?.overview,150)} */}\r\n            </div>\r\n            <div className=\"banner_fadeBottom\"/>\r\n            \r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useState } from 'react';\r\n// import {useEffect } from 'react';\r\nimport './nav.css';\r\n\r\nfunction Nav() {\r\n\r\n    // const [show,handleShow]  = useState(false);\r\n    // useEffect(()=>{\r\n    //     window.addEventListener(\"scroll\",()=>{\r\n    //         if(window.scrollY>100){\r\n    //             handleShow(true);\r\n    //         }else handleShow(false);\r\n    //     });\r\n    //     return ()=>{\r\n    //         window.removeEventListener(\"scroll\");\r\n    //     }\r\n    // },[]);\r\n    return (\r\n        <nav className=\"nav\">\r\n           <img className=\"nav_logo\" src=\"https://www.freepnglogos.com/uploads/netflix-logo-0.png\" alt=\"\" srcSet=\"\" />\r\n           {/* <img className=\"nav_logo\" src=\"https://i.ytimg.com/vi/eB_R9SnzxwE/maxresdefault.jpg\" alt=\"\" srcset=\"\" /> */}\r\n           \r\n\r\n            \r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\nimport './App.css';\nimport Row from './Row.js';\nimport request from './request.js';\nimport Banner from './Banner.js';\nimport Nav from './Nav.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Nav/>\n     <Banner/>\n     <Row title=\"NETFLIX ORIGINALS\" fetchUrl={request.fetchNetflixOriginals} isLargeRow/>\n     <Row title=\"Trending Now\" fetchUrl={request.fetchTrending}/>\n     <Row title=\"Top Rated\" fetchUrl={request.fetchTopRated}/>\n     <Row title=\"Action Movies\" fetchUrl={request.fetchActionMovies}/>\n     <Row title=\"Comedy\" fetchUrl={request.fetchComedyMovies}/>\n     <Row title=\"Horror Movies\" fetchUrl={request.fetchHorrorMovies}/>\n     <Row title=\"Romance Movies\" fetchUrl={request.fetchRomanceMovies}/>\n     <Row title=\"documentaries\" fetchUrl={request.fetchDocumentaries}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}